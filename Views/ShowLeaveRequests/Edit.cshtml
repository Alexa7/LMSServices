@model LMSServices.Models.LeaveRequest

@{
    ViewBag.Title = "Επεξεργασία";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>LeaveRequest</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            <label for="UserID">@ViewBag.descr.Get("LeaveRequestColumns", "UserID")</label>
            @*@Html.LabelFor(model => model.UserID)*@
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.UserID, new { @readonly = "readonly" })
            
@*            @Html.EditorFor(model => model.UserID)
            @Html.ValidationMessageFor(model => model.UserID)*@
        </div>

        <div class="editor-label">
            <label for="FromDate">@ViewBag.descr.Get("LeaveRequestColumns", "FromDate")</label>
            @*@Html.LabelFor(model => model.FromDate)*@
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FromDate, new { @Value = Model.FromDate.ToString("yyyy-MM-dd"), @class = "datepicker" })
            @Html.ValidationMessageFor(model => model.FromDate)
        </div>

        <div class="editor-label">
            <label for="ToDate">@ViewBag.descr.Get("LeaveRequestColumns", "ToDate")</label>
            @*@Html.LabelFor(model => model.ToDate)*@
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ToDate, new { @Value = Model.ToDate.ToString("yyyy-MM-dd"), @class = "datepicker" })
            @Html.ValidationMessageFor(model => model.ToDate)
        </div>

        <div class="editor-label">
            <label for="Type">@ViewBag.descr.Get("LeaveRequestColumns", "Type")</label>
            @*@Html.LabelFor(model => model.Type)*@
        </div>
        <div class="editor-field">
            <select id="Type" name="Type" class="valid">
                <option value="L" @(String.Compare(Model.Type, "L", false) == 0? "selected" : "") >@ViewBag.descr.Get("LeaveRequestType", Model.Type)</option>
            </select>

           @* @Html.TextBoxFor(model => model.Type, new { @Value = @ViewBag.descr.Get("LeaveRequestType", Model.Type) })*@
            @*@Html.EditorFor(model => model.Type)*@
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            <label for="NumOfDays">@ViewBag.descr.Get("LeaveRequestColumns", "NumOfDays")</label>
            @*@Html.LabelFor(model => model.NumOfDays)*@
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.NumOfDays, new { @readonly = "readonly" })
            
            @*@Html.ValidationMessageFor(model => model.NumOfDays)*@
        </div><br />

         @Html.HiddenFor(model => model.Status)

@*        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>*@

        <p>
            <input type="submit" value="Αποθήκευση" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Επιστροφή στη Λίστα", "UserLeaveRequests")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
